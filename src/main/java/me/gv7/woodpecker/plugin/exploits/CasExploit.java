package me.gv7.woodpecker.plugin.exploits;

import me.gv7.woodpecker.plugin.CasRCE;
import me.gv7.woodpecker.plugin.IArgs;
import me.gv7.woodpecker.plugin.IExploitGetShell;

import javax.swing.*;
import java.util.HashMap;
import java.util.Map;

public class CasExploit implements IExploitGetShell {
    @Override
    public Map<String, IArgs> createGetShellCustomArgs() {
        final Map<String, IArgs> lists = new HashMap<>();
        final IArgs gadge = CasRCE.callbacks.getPluginHelper().createArgs();
        gadge.setName("gadge");
        gadge.setDefaultValue("CommonsCollections4");
        gadge.setMastSetup(true);
        gadge.setDescription("cc链，默认用cc4就能打死");

        final IArgs shellType = CasRCE.callbacks.getPluginHelper().createArgs();
        shellType.setName("shell_type");
        shellType.setDefaultValue("TomcatFilterWebshell");
        gadge.setMastSetup(true);
        gadge.setDescription("以后会添加spring的内存马");

        lists.put("gadge", gadge);
        lists.put("shellType", shellType);
        return lists;
    }

    @Override
    public void getShell(String targetURL, Map<String, String> customArgs, JTextArea taResult) {
        String gadge = customArgs.get("gadge");
        String shellType = customArgs.get("shell_type");


    }

    public void basicInfoPrint(String targetURL, Map<String, String> customArgs, JTextArea taResult){
        String gadge = customArgs.get("gadge");
        String shellType = customArgs.get("shell_type");
        taResult.setText("目标URL: "+targetURL+"\n");
        taResult.setText("利用链: "+gadge+"\n");
        taResult.setText("shell类型: "+shellType+"\n");
    }

    public void checkVuln(String targetURL){

    }
}
